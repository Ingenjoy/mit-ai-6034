10.02.2017
https://www.youtube.com/watch?v=STjW3eH0Cik
6. Search: Games, Minimax, and Alpha-Beta

0. General:
 - Anytime algorithm: An algorithm which provides an answer all the time, althought it might not be the best one at first.
   Always have an answer ready to go as soon as an answer is demanded
 - Martial arts principle: We're using the enemy's characteristics against them.

1. How a computer thinks:
 - Analysis -> Strategy -> Tactics -> Move
 - IF/THEN rules - it doesn't do any complicated overall analysis

2. Chess game program:
2.1. Analysis -> Strategy -> Tactics -> Move
2.2. IF/THEN rules - it doesn't do any complicated overall analysis
2.3. Check all available moves. Rank them by importance. Do a move.
2.4. Look ahead and Evaluate.
2.5. British Musem Algorithm: Not going to work
2.6. Look ahead as far as possible

3. Linear Scoring Polynomial
- features(A.X + B.Y + C.Z...) - all the static features of the chessboard

4. Characteristics of trees:
- Branch Factor
- Depth Factor
- Branch to Depth: Branch ^ Depth

5. MIN-MAX Algorithm:
- MAX: The player who wants to do the best move
- MIN: The opponent, who wants MAX to do the worst move
- You go from the botto to the top and decide which options each player (MIN, MAX) takes against each other
    
    /\          LEVEL=1   MAX = 2
   /  \
  /    \        LEVEL=2   MIN = 2, 1
 /\    /\
/  \  /  \      LEVEL=3   
2  7  1  8

6. Alpha-Beta Algorithm:
- The MAX/MIN cuts the entire part of the tree, as soon as it knows one of the number
- Demonstation: [30:00]
- It saves time by not computing unnecessary children nodes and cutting them off
- Speed: This algorithm is considerably fast and optimized
- Deep cutoff: When you cut an entire big part of the tree
- Alpha-beta is not a different algorithm than MIN-MAX, it's just a layer on top of it.
- Alpha-beta does not produce different results than MIN-MAX. It's just a speed-up. It's not an approximation, gives exactly
the same answer as MIN-MAX.
- Algorithm demo: http://web.mit.edu/dxh/www/adverse/index.html

7. Progressive Deepening!
- The amount of computational effort needed to be done on each level
  is not much different than the amount of computation needs to be done on just one level, the penultimate one
- Progressive deepning ensures you get a better answer on each layer
- It provides you with an answer all the time. (Anytime algorithm)

8. Deep Blue:
- This is the computer which beat the chess champion
- It does static evaluations
- Evaluation function: An evaluation function, also known as a heuristic evaluation function or static evaluation 
function, is a function used by game-playing programs to estimate the value or goodness of a position in the minimax and related algorithms. The evaluation function is typically designed to prioritize speed over accuracy; the function looks only at the current position and does not explore possible moves (therefore static).
- Algorithm of Deep Blue: Minimax + Alpha Beta + Progressive Deepening
+ Parallel Computing + Opening Book + Endgame conditions + Uneven Tree Development
- Deep Blue uses "Bulldozer intelligence", not human intelligence.

9. Uneven Tree Development
- Additional insurance that the calculated numbers are correct

